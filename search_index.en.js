window.searchIndex = {"fields":["title","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"0":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.4641016151377544},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":2},"1":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.1622776601683795},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":11.135528725660043},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":4.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":6,"0":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":1,"1":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}},";":{"docs":{},"df":0,"2":{"docs":{},"df":0,";":{"docs":{},"df":0,"3":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1,";":{"docs":{},"df":0,"4":{"docs":{},"df":0,";":{"docs":{},"df":0,"5":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.8284271247461903}},"df":1}}}}}}}}},"2":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":5,".":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.7320508075688772}},"df":1}},"0":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}},"3":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"0":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/authors/rafal-gwozdzinski/":{"tf":1.0}},"df":1}}}}}},"4":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":2,"2":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.1622776601683795},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0}},"df":2},";":{"docs":{},"df":0,"5":{"docs":{},"df":0,";":{"docs":{},"df":0,"6":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}}},"5":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.23606797749979}},"df":1},"_":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":4.898979485566356},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":3.1622776601683795}},"df":4,",":{"docs":{},"df":0,"_":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}},"a":{"docs":{},"df":0,"+":{"docs":{},"df":0,"b":{"docs":{},"df":0,"+":{"docs":{},"df":0,"c":{"docs":{},"df":0,"+":{"docs":{},"df":0,"d":{"docs":{},"df":0,"+":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}}}}},";":{"docs":{},"df":0,"b":{"docs":{},"df":0,";":{"docs":{},"df":0,"c":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,";":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"v":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}}}},"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":2,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":5,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}},"k":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":4}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":1},"3":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.23606797749979}},"df":1},"4":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.23606797749979}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":2,"c":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":4}}}}}}},"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178}},"df":2,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.8284271247461903}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.8284271247461903}},"df":1},"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.6457513110645907},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/authors/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":3}}},"o":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.3166247903554},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":3.7416573867739413},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":5.744562646538029}},"df":4,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":2,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1,"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772}},"df":3}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":4.242640687119285}},"df":2}}}}}}}}}}}},"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.4641016151377544}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.4641016151377544}},"df":1},"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/authors/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/":{"tf":1.0}},"df":1}}}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.23606797749979}},"df":1}}},"k":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}}}}}},"b":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":2,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1},"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.8284271247461903}},"df":1},"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.8284271247461903}},"df":1},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1},"e":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":2}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":3}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":4.58257569495584},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":5,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":3}},"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.8284271247461903}},"df":1},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}},"g":{"docs":{"https://autoforecastteam.github.io/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.8284271247461903}},"df":1},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":1}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":3.4641016151377544}},"df":1}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}},"x":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}},"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.8284271247461903}},"df":1}},"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.8284271247461903}},"df":1}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1},"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.23606797749979}},"df":3,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772}},"df":1}}},"l":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.0},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":7},"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979}},"df":1}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.6457513110645907}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":6}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979}},"df":1,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.6457513110645907}},"df":1}}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":4,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178}},"df":1}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.605551275463989},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":3}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.7416573867739413},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}},"x":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":4}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1},"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":3},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3}}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":6,"e":{"docs":{},"df":0,"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,",":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}},"v":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979}},"df":1}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178}},"df":2,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1},"e":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":3.7416573867739413}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":4}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":6.6332495807108}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":3}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"v":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":4}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":2.6457513110645907}},"df":1},"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}},")":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":6}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":2}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1,"c":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.7320508075688772}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":2}}},"t":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":3.1622776601683795},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.4641016151377544},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":4,".":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3}},"1":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.8284271247461903}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.8284271247461903}},"df":1},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772}},"df":2}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.8284271247461903}},"df":1}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":3.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.605551275463989},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":5,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/authors/robert-marciniak/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":3.7416573867739413}},"df":1,"u":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":2}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.23606797749979}},"df":2},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.4641016151377544}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":6}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":4.123105625617661},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.358898943540674},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":3.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":3.3166247903554}},"df":6,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1},"3":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.449489742783178}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1}}}}}},"f":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":4.123105625617661},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.1622776601683795},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":4.123105625617661},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":7,"#":{"docs":{},"df":0,"'":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.0}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":2,"f":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979}},"df":1}}}}}}},"l":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":4.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":5.744562646538029}},"df":2,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}},"v":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178}},"df":1}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":5.477225575051661},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772}},"df":1}}}},"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772}},"df":1,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.23606797749979}},"df":1}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":5,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"x":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.69041575982343},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":6,"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.4641016151377544},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":3.3166247903554},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":3.605551275463989},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":7,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":4}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.7320508075688772}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":8.831760866327848},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":4.242640687119285},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":8.48528137423857},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":4.242640687119285},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":9.695359714832659},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":6.164414002968976},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":4.242640687119285}},"df":7,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.1622776601683795},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":6.48074069840786},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":4.0}},"df":5}}},"'":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"ź":{"docs":{},"df":0,"d":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"ń":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/authors/rafal-gwozdzinski/":{"tf":1.0}},"df":1}}}}}}}}}}},"h":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"[":{"docs":{},"df":0,"2":{"docs":{},"df":0,";":{"docs":{},"df":0,"3":{"docs":{},"df":0,";":{"docs":{},"df":0,"4":{"docs":{},"df":0,";":{"docs":{},"df":0,"5":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.6457513110645907}},"df":1}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2},"l":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.6457513110645907},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":3}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.8284271247461903}},"df":1,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.23606797749979}},"df":1}}}}}}},"l":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":2.0}},"df":1},"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.449489742783178}},"df":5}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":3.7416573867739413}},"df":1}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"x":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":1,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.449489742783178}},"df":1}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":2}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.605551275463989},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.8284271247461903}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":3}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772}},"df":2}}},"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1},"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}},"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}},"u":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"'":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":3},"e":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"j":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1}},"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1},"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":4.242640687119285}},"df":1}}},"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1}},"k":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"y":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3}}}},"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2},"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178}},"df":1}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1,"'":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.6457513110645907},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.23606797749979}},"df":5},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":2}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":5}}}}},"f":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.6457513110645907},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":2}}},"n":{"docs":{},"df":0,"q":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.7416573867739413},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":3,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1}}}}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":2}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":3,"u":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.1622776601683795},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":3,";":{"docs":{},"df":0,"|":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}}}}},"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":3.605551275463989}},"df":1,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":4}},"n":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":3}}}},"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":4.58257569495584},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/authors/robert-marciniak/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":7.14142842854285},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":4}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1},"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.4641016151377544}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.795831523312719},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.6457513110645907},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":4.898979485566356},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":4.69041575982343},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":5,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":8}}},"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1},"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":3,"y":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"4":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1}}}}}}}}}},"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.1622776601683795}},"df":1}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":7.14142842854285}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.1622776601683795}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":4.242640687119285}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772}},"df":3,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":5,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1}}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":2.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.4641016151377544},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":6}},"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"w":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.449489742783178}},"df":3}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}}}},"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":1,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}},"k":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.7416573867739413},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":5.0990195135927845},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.7416573867739413}},"df":4},"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}},"p":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.8284271247461903}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4},"r":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.449489742783178}},"df":4,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979}},"df":1}}}}}}}}},"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"_":{"docs":{},"df":0,",":{"docs":{},"df":0,"_":{"docs":{},"df":0,",":{"docs":{},"df":0,"_":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.8284271247461903}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.0}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.0}},"df":1},"3":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":4,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":2}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":3,"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"5":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":4.69041575982343}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.3166247903554}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.1622776601683795}},"df":1}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":3.1622776601683795}},"df":1,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":6.0}},"df":1,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":3.1622776601683795}},"df":1}}}}},"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":4.242640687119285}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,",":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":5,"1":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{"https://autoforecastteam.github.io/authors/pawel-sierzputowski/":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":3.4641016151377544}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":3.1622776601683795}},"df":1}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.8284271247461903}},"df":1}}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/":{"tf":1.0},"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":5}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":1}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":3}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1,"s":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.449489742783178}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.8284271247461903}},"df":2}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":3}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.8284271247461903}},"df":1}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0}},"df":2}}}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.6457513110645907}},"df":1}}}}},"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.6457513110645907},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4,"1":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.1622776601683795}},"df":2},"2":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.1622776601683795}},"df":2,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178}},"df":1}}}},"3":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.8284271247461903}},"df":1,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":1}}}},"4":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178}},"df":1},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/authors/rafal-gwozdzinski/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}}}},"c":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":4.242640687119285}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}},"o":{"docs":{},"df":0,"v":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.0}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.0}},"df":1},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":5.291502622129181},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":6,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"u":{"docs":{},"df":0,",":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,",":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":4.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":2}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1,"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":4.898979485566356}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"1":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.1622776601683795}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":4.795831523312719},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":3.872983346207417},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":5.916079783099616}},"df":6}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/authors/robert-marciniak/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}},"w":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"[":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903}},"df":1}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":3,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":4.69041575982343},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.449489742783178}},"df":3,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":5}},"v":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":5.656854249492381},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":5,"m":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.8284271247461903}},"df":1,"(":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}},"q":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":3.7416573867739413}},"df":3,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"z":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/authors/pawel-sierzputowski/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/authors/pawel-sierzputowski/":{"tf":1.0}},"df":1}}}}}}}}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":2}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.7416573867739413},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":6,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":7.483314773547883}},"df":1,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.8284271247461903}},"df":1,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}},"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}},"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.6457513110645907}},"df":1}},"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"f":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.7320508075688772}},"df":1}}}}}},"q":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":2.0}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0}},"df":2}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1,"1":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}}}}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":3.3166247903554}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"h":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"5":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"x":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":2,"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.8284271247461903}},"df":1},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.449489742783178}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772}},"df":1}}}},"b":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"'":{"docs":{"https://autoforecastteam.github.io/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":2}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1,"'":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"'":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3},"k":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":1}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1,"n":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":2,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.6457513110645907}},"df":3}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":2}}},"i":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":3.3166247903554},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":6},"u":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":4.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":6.164414002968976}},"df":2,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":1}}}}},"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":1}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"w":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":2}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":5.916079783099616},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":4.123105625617661},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.3166247903554},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.23606797749979}},"df":7}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.0}},"df":1}}}}},"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1}}}}},"s":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.3166247903554},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":3.4641016151377544},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":3.3166247903554},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.6457513110645907},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":3.3166247903554}},"df":8,"a":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"'":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0}},"df":4,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":2.23606797749979}},"df":1,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":4.0}},"df":1},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":4.0}},"df":1},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}},"u":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.872983346207417},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.1622776601683795},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.4142135623730951}},"df":6,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":2.449489742783178}},"df":2,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":4}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.449489742783178}},"df":1}}}}}},"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}},"y":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.6457513110645907},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":2.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":8}},"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":4}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.7320508075688772},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.7320508075688772}},"df":5},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.23606797749979},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.23606797749979}},"df":4,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":3.4641016151377544}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":3},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":2}}}}}}},"x":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":5.291502622129181},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":3.1622776601683795},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":3.7416573867739413},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":6,",":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.4142135623730951}},"df":1}}},".":{"docs":{},"df":0,"[":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"1":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":5.656854249492381},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.4641016151377544}},"df":2,";":{"docs":{},"df":0,"x":{"docs":{},"df":0,"2":{"docs":{},"df":0,";":{"docs":{},"df":0,"x":{"docs":{},"df":0,"3":{"docs":{},"df":0,";":{"docs":{},"df":0,"x":{"docs":{},"df":0,"4":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"2":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":5.291502622129181},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":3.4641016151377544}},"df":2},"3":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":1},"4":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":2.0}},"df":1},";":{"docs":{},"df":0,"x":{"docs":{},"df":0,";":{"docs":{},"df":0,"x":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.4142135623730951}},"df":1}}}}},"y":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":2.8284271247461903},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.4142135623730951},"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":2.0}},"df":3,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":2.449489742783178},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.7320508075688772}},"df":2}}}}}}},"title":{"root":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://autoforecastteam.github.io/authors/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/":{"tf":1.0}},"df":1}}}}}}}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/":{"tf":1.0}},"df":1}}}},"c":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":2}}}}}}},"f":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":4},"g":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"ź":{"docs":{},"df":0,"d":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"ń":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/authors/rafal-gwozdzinski/":{"tf":1.0}},"df":1}}}}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://autoforecastteam.github.io/posts/fsharp-errors/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://autoforecastteam.github.io/authors/robert-marciniak/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-intro/":{"tf":1.0},"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://autoforecastteam.github.io/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://autoforecastteam.github.io/posts/parsing-101/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://autoforecastteam.github.io/authors/pawel-sierzputowski/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/posts/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://autoforecastteam.github.io/authors/rafal-gwozdzinski/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://autoforecastteam.github.io/authors/robert-marciniak/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"z":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"https://autoforecastteam.github.io/authors/pawel-sierzputowski/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"'":{"docs":{"https://autoforecastteam.github.io/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://autoforecastteam.github.io/posts/monad-transformers/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://autoforecastteam.github.io/posts/deconstruction/":{"tf":1.0}},"df":1}}}}}}},"documentStore":{"save":true,"docs":{"https://autoforecastteam.github.io/":{"body":"","id":"https://autoforecastteam.github.io/","title":"AutoForecast team's online blog "},"https://autoforecastteam.github.io/authors/":{"body":"The authors of the articles.\n","id":"https://autoforecastteam.github.io/authors/","title":"Authors"},"https://autoforecastteam.github.io/authors/pawel-sierzputowski/":{"body":"@sierzput\n","id":"https://autoforecastteam.github.io/authors/pawel-sierzputowski/","title":"Paweł Sierzputowski"},"https://autoforecastteam.github.io/authors/rafal-gwozdzinski/":{"body":"@3Rafal\n","id":"https://autoforecastteam.github.io/authors/rafal-gwozdzinski/","title":"Rafał Gwoździński"},"https://autoforecastteam.github.io/authors/robert-marciniak/":{"body":"@Esgariot\n","id":"https://autoforecastteam.github.io/authors/robert-marciniak/","title":"Robert Marciniak"},"https://autoforecastteam.github.io/posts/":{"body":"","id":"https://autoforecastteam.github.io/posts/","title":"Posts"},"https://autoforecastteam.github.io/posts/deconstruction/":{"body":"\nConstruction and deconstruction of F# values\nSimple type deconstruction\nLet's say we have a simple type (aka Single case discriminated union type) that wraps an int.\ntype SimpleInt = SimpleInt of int\nlet simpleInt = SimpleInt 42\n\nWe have created a value and bound it to simpleInt variable.\nHow can we retrieve it's content?\nAnonymous function deconstruction\nWe can deconstruct SimpleInt in lambda expression\nlet intValue = simpleInt |&gt; fun (SimpleInt s) -&gt; s\n\nLet binding deconstruction\nWe can deconstruct it in let assignment\nlet (SimpleInt intValue') = simpleInt\n\nDedicated value retrieving function\nWe can add a module with the type name that contains deconstructing function.\nThis is a bit more verbose, but can be handy, especially when we use it in many places and are tired of redundant lambdas.\nmodule SimpleInt =\n    let value (SimpleInt s) = s\n\nlet intValue'' = simpleInt |&gt; SimpleInt.value\n\nDirect deconstruction of function parameter\nWe can also unwrap value directly in a function that uses it.\nmodule SimpleIntAdder =\n    let addSimpleInts (SimpleInt i1) (SimpleInt i2) = \n        SimpleInt (i1 + i2)\n\nParallel between construction and deconstruction\nThere is a parallel between notation of construction and deconstruction of simple types.\nIn both cases they are written as ({Type Name} {Value})\nlet wrapped = (SimpleInt 42)\nlet (SimpleInt unwrapped) = wrapped\n\nRecord types\nNow, let's see what happens with records.\nLet's define and construct a value for a simple record type.\ntype SimpleRecord = \n    { First: SimpleInt\n      Second: int }\nlet simpleRecord = \n    { First = SimpleInt 42\n      Second = 1 }\n\nDeconstruction similar to simple types\nWe can deconstruct record in: \n\nlambda expression:\n\n// Remark: Added type annotations to r1, r2 for clarity\nlet (r1: SimpleInt), (r2: int) = \n    simpleRecord \n    |&gt; fun {First = x; Second = y} -&gt; (x, y)\n\n\nlet assignment:\n\nlet {First = r1'; Second = r2'} = simpleRecord\n\n\nfunction parameter:\n\n// Remark: We deconstruct both record and it's internal field (which is of type SimpleInt)\nmodule SimpleRecordAdder =\n    let addRecordFields {First = (SimpleInt f); Second = s} = f + s\n\nThere is a parallel between construction and deconstruction of records similar to simple types:\nlet wrappedRecord = {First = SimpleInt 42; Second = 1}\nlet {First = (SimpleInt f); Second = s} = wrappedRecord \n\nPartial deconstruction\nIf we don't need all of record fields, we can use partial deconstruction in all previously defined cases.\nlet {Second = s'} = wrappedRecord\nlet s'' = wrappedRecord |&gt; fun {Second = x} -&gt; x\n\nmodule SecondFieldAdder =\n    let addOneToSecondField {Second = s} = s + 1\n\nlet {First = (SimpleInt f')} = wrappedRecord\nlet f'' = wrappedRecord |&gt; fun {First = (SimpleInt x)} -&gt; x\n\nmodule FirstFieldAdder =\n    let addOneToFirstField {First = (SimpleInt f)} = f + 1\n\nPattern matching\nPattern matching is one of the most popular usage of deconstruction.\nSimple type\ntype MyInt = MyInt of int\nlet myVal = MyInt 42\n\nlet valueIfNotZero = \n    match myVal with \n    | MyInt 0 -&gt; None\n    | MyInt x -&gt; Some x\n\nRecord type\nWe can match on all record fields:\ntype MyRecord = { First: int; Second: int }\nlet myRec = {First = 1; Second = 2}\n\n// Full\nlet addIfNotZeros =\n    match myRec with\n    | {First = 0; Second = 0} -&gt; None\n    | {First = x; Second = y} -&gt; Some (x + y)\n\nOr we can use partial deconstruction\nlet getSecondIfNotZero =\n    match myRec with\n    | {Second = 0} -&gt; None\n    | {Second = x} -&gt; Some x\n\nList\nLists offer a refined ways of deconstruction. \nLet's define a simple list and see how we can match on it.\nlet myList = [1;2;3;4;5]\n\nExact match\nlet is12345 =\n    match myList with\n    | [1;2;3;4;5] -&gt; true\n    | _ -&gt; false\n\nMatch exact number of items\nlet sum5OrZero =\n    match myList with\n    | [a;b;c;d;e] -&gt; a+b+c+d+e\n    | _ -&gt; 0\n\nMatch head/tail\nWe can match head/tail with h::t construct.\nHead is the first element of the list, Tail is a list of all further elements.\nExample use cases:\n\nExact head \n\nlet is1First =\n    match myList with\n    | 1::t -&gt; true\n    | _ -&gt; false\n\n\nExact tail\n\nlet is2345Tail =\n    match myList with\n    | h::[2;3;4;5] -&gt; true\n    | _ -&gt; false\n\n\nDeconstruct head\n\nlet head =\n    match myList with\n    | h::t -&gt; Some h\n    | _ -&gt; None\n\n\nDeconstruct tail\n\nlet skipHead =\n    match myList with\n    | h::t -&gt; t\n    | _ -&gt; []\n\n\nEmpty or not?\n\nlet isEmpty =\n    match myList with\n    | [] -&gt; true \n    | _ -&gt; false\n\n\nOne element\n\nlet isSingle =\n    match myList with\n    | [x] -&gt; true\n    | _ -&gt; false\n\nArrays\nAn Array structure offers fewer ways of matching than list.\nWe construct an array as:\nlet myArray = [|1;2;3;4;5|]\n\nCases similar to List type\n\nExact match\n\nlet is12345' =\n    match myArray with\n    | [|1;2;3;4;5|] -&gt; true\n    | _ -&gt; false\n\n\nDeconstruct exact number of items\n\nlet sum5OrZero' =\n    match myArray with\n    | [|a;b;c;d;e|] -&gt; a+b+c+d+e\n    | _ -&gt; 0\n\n\nEmpty?\n\nlet isEmpty' =\n    match myArray with\n    | [||] -&gt; true\n    | _ -&gt; false\n\n\nOne element\n\nlet isSingle' =\n    match myArray with\n    | [|x|] -&gt; true\n    | _ -&gt; false\n\nHead/tail\nUnfortunately, there is no built-in way to match h::t on arrays in F#.\nExample Code\nTo get a better feel for concepts described in this post, I encourage readers to try this code on their own machines.\nThe easiest way is to put it into fsx script and run using REPL.\n////////////////////////////////////\n//// Simple type deconstruction ////  \n////////////////////////////////////\n\ntype SimpleInt = SimpleInt of int\nlet simpleInt = SimpleInt 42\n\n// We created a value in a usual way and bound it to `simpleInt` variable.\n// How can we retrieve a value from it?\n\n// *Anonymous function deconstruction\n//  We can deconstruct `SimpleInt` in lambda expression\nlet intValue = simpleInt |&gt; fun (SimpleInt s) -&gt; s\n\n// *Let binding deconstruction\n//  We can deconstruct it in `let` assignment\nlet (SimpleInt intValue') = simpleInt\n\n// *Dedicated value retrieving function \n//  We can add a module with the type name that contains deconstructing function.\n//  This is a bit more verbose, but can be handy, especially when we use it in many places and are tired of redundant lambdas.\nmodule SimpleInt =\n    let value (SimpleInt s) = s\n\nlet intValue'' = simpleInt |&gt; SimpleInt.value\n\n// *Direct deconstruction of function parameter\n//  We can also unwrap value directly in a function that uses it.\nmodule SimpleIntAdder =\n    let addSimpleInts (SimpleInt i1) (SimpleInt i2) = \n        SimpleInt (i1 + i2)\n\n//// Parallel between construction and deconstruction\n// There is a parallel between notation of construction and deconstruction of simple types.\n// In both cases they are written as `({Type Name} {Value})`\nlet wrapped = (SimpleInt 42)\nlet (SimpleInt unwrapped) = wrapped\n\n//////////////////////\n//// Record types ////\n//////////////////////\n\n// Now, let's see what happens with records.\n// Let's define and construct a value for a simple record type.\ntype SimpleRecord = \n    { First: SimpleInt\n      Second: int }\nlet simpleRecord = \n    { First = SimpleInt 42\n      Second = 1 }\n\n//// Deconstruction similar to simple types\n\n// We can deconstruct record in: \n// *lambda expression:\n//  Remark: Added type annotations to r1, r2 for clarity\nlet (r1: SimpleInt), (r2: int) = \n    simpleRecord \n    |&gt; fun {First = x; Second = y} -&gt; (x, y)\n\n// *let assignment:\nlet {First = r1'; Second = r2'} = simpleRecord\n\n// *function parameter:\n// Remark: We deconstruct both record and it's internal field (which is of type SimpleInt)\nmodule SimpleRecordAdder =\n    let addRecordFields {First = (SimpleInt f); Second = s} = f + s\n\n// There is a similar parallel between construction and deconstruction of records:\nlet wrappedRecord = {First = SimpleInt 42; Second = 1}\nlet {First = (SimpleInt f); Second = s} = wrappedRecord \n\n//// Partial deconstruction\n// If we don't need all of record fields, we can use partial deconstruction in all previously defined cases.\nlet {Second = s'} = wrappedRecord\nlet s'' = wrappedRecord |&gt; fun {Second = x} -&gt; x\n\nmodule SecondFieldAdder =\n    let addOneToSecondField {Second = s} = s + 1\n\nlet {First = (SimpleInt f')} = wrappedRecord\nlet f'' = wrappedRecord |&gt; fun {First = (SimpleInt x)} -&gt; x\n\nmodule FirstFieldAdder =\n    let addOneToFirstField {First = (SimpleInt f)} = f + 1\n\n//////////////////////////\n//// Pattern matching ////\n//////////////////////////\n   \n// Pattern matching is one of the most popular usage of deconstruction.\n\n///// Simple type\n\ntype MyInt = MyInt of int\nlet myVal = MyInt 42\n\nlet valueIfNotZero = \n    match myVal with \n    | MyInt 0 -&gt; None\n    | MyInt x -&gt; Some x\n\n//// Record type\n//   We can match on all record fields:\ntype MyRecord = { First: int; Second: int }\nlet myRec = {First = 1; Second = 2}\n\n// Full\nlet addIfNotZeros =\n    match myRec with\n    | {First = 0; Second = 0} -&gt; None\n    | {First = x; Second = y} -&gt; Some (x + y)\n\n// Or we can use partial deconstruction\nlet getSecondIfNotZero =\n    match myRec with\n    | {Second = 0} -&gt; None\n    | {Second = x} -&gt; Some x\n\n//// List\n//   Lists offer a refined ways of deconstruction. \n//   Let's define a simple list and see how we can match on it.\nlet myList = [1;2;3;4;5]\n\n// *Exact match\nlet is12345 =\n    match myList with\n    | [1;2;3;4;5] -&gt; true\n    | _ -&gt; false\n\n// *Match exact number of items\nlet sum5OrZero =\n    match myList with\n    | [a;b;c;d;e] -&gt; a+b+c+d+e\n    | _ -&gt; 0\n\n// *Match head/tail\n//  We can match head/tail with `h::t` construct.\n//  Head is the first element of the list, Tail is a list of all further elements.\n//  Example use cases:\n// Exact head \nlet is1First =\n    match myList with\n    | 1::t -&gt; true\n    | _ -&gt; false\n\n// Exact tail\nlet is2345Tail =\n    match myList with\n    | h::[2;3;4;5] -&gt; true\n    | _ -&gt; false\n\n// Deconstruct head\nlet head =\n    match myList with\n    | h::t -&gt; Some h\n    | _ -&gt; None\n\n// Deconstruct tail\nlet skipHead =\n    match myList with\n    | h::t -&gt; t\n    | _ -&gt; []\n\n// Empty or not?\nlet isEmpty =\n    match myList with\n    | [] -&gt; true \n    | _ -&gt; false\n\n// One element\nlet isSingle =\n    match myList with\n    | [x] -&gt; true\n    | _ -&gt; false\n\n//// Arrays\n//   An Array structure offers fewer ways of matching than list.\n//   We construct an array as:\nlet myArray = [|1;2;3;4;5|]\n\n// Cases similar to List type \n// *Exact match\nlet is12345' =\n    match myArray with\n    | [|1;2;3;4;5|] -&gt; true\n    | _ -&gt; false\n\n// *Deconstruct exact number of items\nlet sum5OrZero' =\n    match myArray with\n    | [|a;b;c;d;e|] -&gt; a+b+c+d+e\n    | _ -&gt; 0\n\n// *Empty?\nlet isEmpty' =\n    match myArray with\n    | [||] -&gt; true\n    | _ -&gt; false\n\n// *One element\nlet isSingle' =\n    match myArray with\n    | [|x|] -&gt; true\n    | _ -&gt; false\n\n","id":"https://autoforecastteam.github.io/posts/deconstruction/","title":"Construction and deconstruction of F# values"},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"body":"\nDotnet API changes\nUpgrade to .NET Standard 2.1\nIn our solution there are a few .NET Core 3.1 applications and a bunch of libraries shared between them targeting .NET Standard in different versions. There is no point in keeping them in such state so I decided to upgrade all the libraries to highest possible version which is .NET Standard 2.1. After doing that compiler showed me some errors like this:\n  error [CS0121] The call is ambiguous between the following methods or properties:\n  'System.Collections.Generic.CollectionExtensions.GetValueOrDefault&lt;TKey, TValue&gt;(\n      System.Collections.Generic.IReadOnlyDictionary&lt;TKey, TValue&gt;, TKey)'\n  and 'HelperClasses.BasicExtensions.GetValueOrDefault&lt;K, V&gt;(\n      System.Collections.Generic.IDictionary&lt;K, V&gt;, K)'\n\nIt turned out that a new CollectionExtensions appeared in the API since dotnet Standard 2.1. It seems that our custom extension method can be removed\npublic static class BasicExtensions\n{\n    public static V GetValueOrDefault&lt;K, V&gt;(this IDictionary&lt;K, V&gt; dictionary, K key)\n    {\n        return dictionary.TryGetValue(key, out var dictVal) ? dictVal : default(V);\n    }\n    /// ...\n}\n\nBut in some cases we call GetValueOrDefault on IDictionary. IDictionary and IReadOnlyDictionary are separate interfaces, none of them derive from the other. However Dictionary implements both of them.\nMethod dispatch\nTo eliminate this issue we can cast Dictionary objects to one of interfaces IDictionary or IReadOnlyDictionary, but it is not convenient solution since there are multiple usages of Dictionary where we call GetValueOrDefault. To address this problem in a more systematic way we can use the fact, that in C# methods on more derived class is applicable and add another implementation for Dictionary:\npublic static V GetValueOrDefault&lt;K, V&gt;(this Dictionary&lt;K, V&gt; dictionary, K key)\n{\n    return ((IReadOnlyDictionary&lt;K, V&gt;) dictionary).GetValueOrDefault(key);\n}\n\nAfter that, when we call Dictionary.GetValueOrDefault this implementation above is used, because it has higher priority than methods implemented for interfaces implemented by Dictionary. And also everything works correctly for cases when we call GetValueOrDefault on IDictionary and ReadOnlyDictionary, because they already have their own extensions.\n","id":"https://autoforecastteam.github.io/posts/dotnet-api-changes/","title":"Dotnet API changes"},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"body":"\nException Handling in F#\nTry-catch\nSimplest way to handle Exception is to use a try-with pattern. It is similar concept to a try-catch pattern in C#.\nAccording to an F# documentation a structure of try-catch block is\ntry\n    expression1\nwith\n| pattern1 -&gt; expression2\n| pattern2 -&gt; expression3\n...\n\nThe shortest way we can write it is to give one catch-all pattern for all exception.\nThen we can even drop the pipe and match directly after with clause:\nlet operationThatFails () = failwith \"Error\"\nlet x =\n  try\n    operationThatFails ()\n  with e -&gt; sprintf \"Caught exception %A\" e\n\nIn above case the exception is handled correctly. Variable x evaluates to \"Caught exception System.Exception: Error\" string.\nProblem with HOFs and partial application\nThere is one problem that has caught me unexpectedly.\nI was working on a function that did a lookup on CsvRow from FSharp.Data package.\nThe first version was:\nlet tryGetValue (row: CsvRow) (columnName: string) =\n   try\n       row.[columnName]\n   with\n   | :? KeyNotFoundException -&gt; failwithf \"Missing column: %s\" columnName\n\nI used it to catch exceptions when there is a missing column name in CSV and then rethrow\nwith better message. Default exception message was too cryptic for my use case.\nAfter couple of minutes I thought that it would be a good idea to refactor this into a\nhigher-order function that will be partially applied.\nlet tryGetValue (columnName: string) =\n   try\n       fun (x: CsvRow) -&gt; x.[columnName]\n   with\n   | :? KeyNotFoundException -&gt; failwithf \"Missing column: %s\" columnName\n\nAt first glance it looked OK. The only problem is, that this solution did not work.\nIn this case exceptions are caught only for the anonymous function creation part.\nApplication of my newly created function happens in another context, which may or may not have\nits own exception handling.\nSimilar thing happens with partial application:\nlet operationThatFails (_: string) (_: string) : string = failwith \"Error\"\n\nlet x =\n  try\n    operationThatFails \"str1\" \"str2\"\n  with\n  | e -&gt; failwithf \"Caught exception %A\" e\n\nlet partiallyApplied : (string -&gt; string) =\n  try\n    operationThatFails \"str1\"\n  with\n  | e -&gt; failwithf \"Caught exception %A\" e\n\nlet y = partiallyApplied \"str2\"\n\nVariable x evaluates to string \"Caught exception [...]\".\nEvaluation of y fails with System.Exception: Error\nAlternative approach\nAn interesting (and more functional) way to handle exceptions is to use an\nFSharpPlus library.\nThere is a simple (but very helpful) function protect for Result type:\nlet protect (f: 'T-&gt;'U) (x: 'T) : Result&lt;'U,exn&gt; =\n        try\n            Ok (f x)\n        with e -&gt; Error e\n\nEach time we deal with a function/method that throws exceptions we can wrap it\nand apply in safe Result context:\nlet iWillThrow () : string = failwith \"Error\"\n\nResult.protect iWillThrow  // Wrap\n|&gt; fun x -&gt; x ()           // Apply\n|&gt; function                // Handle Result\n   | Ok v    -&gt; sprintf \"Value was: %s\" v\n   | Error e -&gt; sprintf \"There was an error: %A\" e\n\nIf we don't care about thrown exception we can just use Option.protect, which will\nreturn None for all failed cases.\nThere is a caveat though, that protect accepts only functions that take a single parameter.\nHowever, this constraint may actually be benefitial, because it saves us from making the same mistake\nthat I did.\nPartially applied tryGetValue function would then be:\nlet tryGetValue (columnName: string) =\n   fun (x: CsvRow) -&gt; x.[columnName]\n   |&gt; Option.protect\n   |&gt;&gt; Option.defaultWith (fun () -&gt; failwithf \"Missing column: %s\" columnName)\n\nwhere |&gt;&gt; is just an FSharpPlus operator for Option.map function.\nDisclaimer\nIn all examples above, tryGetValue remains a partial function. It will fail for all columnName values\nthat are not contained in CsvRow. It is written that way, because in my example I treat missing column name\nas an unrecoverable error. I apply Fail-fast principle,\nwhich means that I want to stop further processing immediately.\n","id":"https://autoforecastteam.github.io/posts/fsharp-errors/","title":"Exception handling in F#"},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"body":"\nComputation Expressions in F#\nComputation expression\nis a syntax to express computations with monads (as well as with monoids, monad transformers and applicative functors).\nLet's see how we can use it to work with monadic values. We will\ntry to figure out both easy and more complicated cases (e.g. nested values).\nWe will use FSharpPlus library that provide set of general monad expressions,\nand compare them to \"plain\" F# approach, to see how it differs.\nAdditive monad expression\nLet's start with a simple example of concatenation.\nWe have two lists and a function that takes a list and returns a new list.\nlet l1 = [1;2;3]\nlet l2 = [4;5;6]\nlet listFun  = bind (fun x -&gt; [x;x;x])\n\nA simple way to concatenate them is to use @ operatior\nlet lConcat = l1 @ listFun l2\n\nWhen dealing with more complicated examples, like concatentation of both lists and plain values,\nwe can use list computation expression from F# core library.\nlet lConcat' = \n    [ yield! l1\n      yield! listFun l2\n      yield 42 ] \n\nInstead of dedicated expression, we can just use generic additive monad expression. \nIt works for seq and array types too.\nlet lConcat'' = \n    monad.plus {\n        return! l1\n        return! listFun l2\n        return 42 }\n\nEffectful monad expression\nSecond type of generic monad expression is used to handle monads that have embedded side-effects.\nAsync\nFirst, let's look at Async monad handling.\nPlain approach uses dedicated async expression:\nlet async1 = async { return 1 }\nlet async2 = async { return 2 }\n\nlet aResult = \n    async {\n        let! x1 = async1\n        let! x2 = async2\n        return x1 + x2\n    } \n\nWe can substitute it with generic F#+ monad expression:\nlet aResult' = \n    monad {\n        let! x1 = async1\n        let! x2 = async2\n        return x1 + x2 \n    } \n\nPerforming this operations without computation expressions is cumbersome.\nWe substitute let! with async.Bind and return with async.Return, which\ngives us:\nlet aResult'' = async.Bind(async1, \n                    fun x1 -&gt; async.Bind(async2, \n                                 fun x2 -&gt; async.Return (x1 + x2)\n\nWe can make it a bit cleaner with F#+ operators:\nlet aResult''' = async1 &gt;&gt;= fun x1 -&gt; \n                    async2 &gt;&gt;= fun x2 -&gt; \n                        x1 + x2 |&gt; async.Return\n\nBut for simple operations we can just use F#+ map2\nlet aResult'''' = Async.map2 (+) async1 async2\n\nor lift2\nlet aResult''''' = lift2 (+) async1 async2\n\nOption\nThere is no Option computation expression in F# core, so we have to use F#+:\nlet opt1 = Some 1\nlet opt2 = Some 2\n\nlet oResult = monad {\n    let! x1 = opt1\n    let! x2 = opt2\n    return x1 + x2 }\n\nWe can use bind/map/lift as with async:\nlet oResult' = \n    opt1 |&gt; Option.bind (fun x1 -&gt; \n        opt2 |&gt; Option.bind (fun x2 -&gt; x1 + x2 |&gt; Some)) \n\nlet oResult''  = lift2       (+) opt1 opt2\nlet oResult''' = Option.map2 (+) opt1 opt2\n\nWe can also pattern match:\nlet oResult'''' =\n    match (opt1, opt2) with\n    | (Some opt1, Some opt2) -&gt; Some (opt1 + opt2)\n    | (_,_)                  -&gt; None\n\nComputation expressions are especially useful for complicated operations:\nlet opt3 = Some 3\nlet add1 = (+) 1\nlet isEven x = if x % 2 = 0                                 \n               then Some x \n               else None\nlet multiplyBy4 = (*) 4\n\nlet harderOptResult = \n    monad {\n        let! x1 = opt3\n        let! even = x1 |&gt; add1 |&gt; isEven\n        return multiplyBy4 even }\n\nIn this case bind/map approach doesn't look that bad:\nlet harderOptResult' = \n    opt3 \n    |&gt; Option.bind (add1 &gt;&gt; isEven) \n    |&gt; Option.map multiplyBy4\n\nPattern matching on Options doesn't scale well. It gets unreadable even with one level of nesting.\nlet harderOptResult'' = \n    match opt3 with\n    | None -&gt; None\n    | Some v -&gt; v |&gt; add1 |&gt; isEven\n                |&gt; function \n                    | None -&gt;   None\n                    | Some e -&gt; Some &lt;| multiplyBy4 e\n\nResult\nWorks similarly to Option:\nlet res1 : Result&lt;int,string&gt; = Ok 1\nlet res2 : Result&lt;int,string&gt; = Error \"Niepowodzenie\"\n\nlet rResult = monad {\n    let! x1 = res1\n    let! x2 = res2\n    return x1 + x2 }\n\nlet rResult'  = Result.map2 (+) res1 res2\nlet rResult'' = lift2       (+) res1 res2 \n\nPattern matching on Results is laborous, because we have to handle both errors manually:\nlet rResult''' =\n    match (res1, res2) with\n    | (Ok res1, Ok res2) -&gt; Ok &lt;| res1 + res2\n    | (Error e ,_)       -&gt; Error e\n    | (_, Error e)       -&gt; Error e\n\nEffectful Result\nLet's see what happens when we have effectful function that returns Result of unit. \nInstead of let!, we use do! keyword.\nlet eRes1 () = \n    printfn \"computing res1\"\n    Ok ()\n\nlet eRes2 () = Error \"Could not compute res2\"\n\nlet effResult = \n    monad {\n        do! eRes1 ()\n        do! eRes2 () }\n\nWithout computation expression, we get code thats pretty awkward\nlet effResult' = eRes1 () \n                 |&gt; Result.bind (fun () -&gt; eRes2 () \n                                           |&gt; Result.bind (fun () -&gt; Ok ()))\n\nF#+ bind operator doesn't help\nlet effResult'' = eRes1 () \n                  &gt;&gt;= fun () -&gt; eRes2 () \n                                &gt;&gt;= (fun () -&gt; Ok ())\n\nCode\n#r \"nuget: FSharpPlus\"\n\nopen FSharpPlus\n\n// Additive monad expression\n\nlet l1 = [1;2;3]\nlet l2 = [4;5;6]\nlet listFun  = bind (fun x -&gt; [x;x;x])\n\nlet lConcat = l1 @ listFun l2\n\nlet lConcat' = \n    [ yield! l1\n      yield! listFun l2\n      yield 42 ] \n\nlet lConcat'' = \n    monad.plus {\n        return! l1\n        return! listFun l2\n        return 42 }\n\n// Effectful monad expression\n\n//// Async\nlet async1 = async { return 1 }\nlet async2 = async { return 2 }\n\nlet aResult = \n    async {\n        let! x1 = async1\n        let! x2 = async2\n        return x1 + x2\n    } \naResult |&gt; Async.RunSynchronously\n\nlet aResult' = \n    monad {\n        let! x1 = async1\n        let! x2 = async2\n        return x1 + x2 \n    } \naResult' |&gt; Async.RunSynchronously\n\nlet aResult'' = async.Bind(async1, \n                    fun x1 -&gt; async.Bind(async2, \n                                 fun x2 -&gt; async.Return (x1 + x2)))\naResult'' |&gt; Async.RunSynchronously\n\nlet aResult''' = async1 &gt;&gt;= fun x1 -&gt; \n                    async2 &gt;&gt;= fun x2 -&gt; \n                        x1 + x2 |&gt; async.Return\naResult''' |&gt; Async.RunSynchronously\n\nlet aResult'''' = Async.map2 (+) async1 async2\n                  |&gt; Async.RunSynchronously\n\nlet aResult''''' = lift2 (+) async1 async2\n                   |&gt; Async.RunSynchronously\n\n\n//// Option\nlet opt1 = Some 1\nlet opt2 = Some 2\n\nlet oResult = monad {\n    let! x1 = opt1\n    let! x2 = opt2\n    return x1 + x2 }\n\nlet oResult' = \n    opt1 |&gt; Option.bind (fun x1 -&gt; \n        opt2 |&gt; Option.bind (fun x2 -&gt; x1 + x2 |&gt; Some)) \n\nlet oResult''  = lift2       (+) opt1 opt2\nlet oResult''' = Option.map2 (+) opt1 opt2\n\nlet oResult'''' =\n    match (opt1, opt2) with\n    | (Some opt1, Some opt2) -&gt; Some &lt;| opt1 + opt2\n    | (_,_)                  -&gt; None\n\n\n//// Option - complicated\nlet opt3 = Some 3\nlet add1 = (+) 1\nlet isEven x = if x % 2 = 0                                 \n               then Some x \n               else None\nlet multiplyBy4 = (*) 4\n\nlet harderOptResult = \n    monad {\n        let! x1 = opt3\n        let! even = x1 |&gt; add1 |&gt; isEven\n        return multiplyBy4 even }\n\nlet harderOptResult' = \n    opt3 \n    |&gt; Option.bind (add1 &gt;&gt; isEven) \n    |&gt; Option.map multiplyBy4\n\nlet harderOptResult'' = \n    match opt3 with\n    | None -&gt; None\n    | Some v -&gt; v |&gt; add1 |&gt; isEven\n                |&gt; function \n                    | None -&gt;   None\n                    | Some e -&gt; Some &lt;| multiplyBy4 e\n\n//// Result\nlet res1 : Result&lt;int,string&gt; = Ok 1\nlet res2 : Result&lt;int,string&gt; = Error \"Niepowodzenie\"\n\nlet rResult = monad {\n    let! x1 = res1\n    let! x2 = res2\n    return x1 + x2 }\n\nlet rResult'  = Result.map2 (+) res1 res2\nlet rResult'' = lift2       (+) res1 res2 \n\nlet rResult''' =\n    match (res1, res2) with\n    | (Ok res1, Ok res2) -&gt; Ok &lt;| res1 + res2\n    | (Error e ,_)       -&gt; Error e\n    | (_, Error e)       -&gt; Error e\n\n\n//// Effectful Result\nlet eRes1 () = \n    printfn \"computing res1\"\n    Ok ()\n\nlet eRes2 () = Error \"Could not compute res2\"\n\nlet effResult = \n    monad {\n        do! eRes1 ()\n        do! eRes2 () }\n\nlet effResult' = eRes1 () \n                 |&gt; Result.bind (fun () -&gt; eRes2 () \n                                           |&gt; Result.bind (fun () -&gt; Ok ()))\n\nlet effResult'' = eRes1 () \n                  &gt;&gt;= fun () -&gt; eRes2 () \n                                &gt;&gt;= (fun () -&gt; Ok ())\n\n","id":"https://autoforecastteam.github.io/posts/monad-computation-expressions/","title":"Computation Expressions in F#"},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"body":"Why we can't have nice things, C# query expression edition\nThe closest thing to F#'s computational expression is either combination of async await keywords in contexts that\ndo not always translate to asynchronous context or query expression which does not always translate to querying something.\nThat's because C# is a corporate enterprise language which tries to smuggle Nice Things through, but in a different,\nmore corporate-enterprise-like form - not too abstract, sprinkled with \"query SQL from code!\"-, \"Improve responsiveness without big refactors!\"-, or similar seasoning.\nAbout query expression\nQuery expression is a syntactic sugar which allows compiler to translate\nthis\nprivate Gen&lt;TimeSeriesValueColumn&gt; TimeSeriesValueColumnGen() =&gt;\n    from dto in TimeSeriesDtoGen()\n    from time in Arb.Generate&lt;DateTime&gt;()\n    select TimeSeriesValueColumn.CreateColumns(dto).Single();\n\ninto this\nprivate Gen&lt;TimeSeriesValueColumn&gt; TimeSeriesValueColumnGen() =&gt;\n    TimeSeriesDtoGen()\n        .SelectMany(dto =&gt; Arb.Generate&lt;DateTime&gt;(),\n            (dto, time) =&gt; TimeSeriesValueColumn.CreateColumns(dto).Single());\n\nand can be added to any monad-like type simply by adding few functions\nwith particular names and signatures, e.g. this short snippet allowed me to create valid code for 'case 2'\npublic static class TaskExtensions\n{\n    public static async Task&lt;B&gt; Bind&lt;A, B&gt;(this Task&lt;A&gt; @this, Func&lt;A, Task&lt;B&gt;&gt; fn)\n        =&gt; await fn(await @this);\n\n    public static async Task&lt;B&gt; Map&lt;A, B&gt;(this Task&lt;A&gt; @this, Func&lt;A, B&gt; fn)\n        =&gt; await Task.FromResult(fn(await @this));\n\n    public static Task&lt;C&gt; SelectMany&lt;A, B, C&gt;(this Task&lt;A&gt; @this, Func&lt;A, Task&lt;B&gt;&gt; fn, Func&lt;A, B, C&gt; select)\n        =&gt; @this.Bind(a =&gt; fn(a).Map(b =&gt; select(a, b)));\n}\n\n'what's the underlying type?'\nCase 1\nvar result =\n    from index in Enumerable.Range(1, 5)\n    from date in Enumerable.Repeat(DateTime.Today, 5)\n    select (index, date) into pair\n    select pair.date.AddDays(pair.index);\n\nlet result =\n    seq {\n        let! index = Enumerable.Range(1, 5)\n        let! date = Enumerable.Repeat(DateTime.Today, 5)\n        let pair = (index, date)\n        yield pair |&gt; (fun (i, d) -&gt; d.AddDays(i |&gt; float))\n    }\n\nCase 2\nvar result =\n    from index in GetIndexAsync()\n    from date in Task.FromResult(DateTime.Today)\n    select (index, date) into pair\n    select pair.date.AddDays(pair.index);\n\nlet result =\n    monad {\n        let! index = GetIndexAsync()\n        let! date = Task.FromResult(DateTime.Today)\n        let pair = (index, date)\n        yield pair |&gt; (fun (i, d) -&gt; d.AddDays(i |&gt; float))\n    }\n\nCase 3\nvar result =\n    from index in Option.Some(5)\n    from date in Option.None&lt;DateTime&gt;()\n    select (index, date) into pair\n    select pair.date.AddDays(pair.index);\n\nasync Option&lt;DateTime&gt; Fun() {\n    var index = await Option.Some(5);\n    var date = await Option.None&lt;DateTime&gt;();\n    var pair = (index, date);\n    return pair.date.AddDays(pair.index)\n}\n\nlet result =\n    monad {\n        let! index = Some 5\n        let! date = None\n        let pair = (index, date)\n        yield pair |&gt; (fun (i, (d:DateTime)) -&gt; d.AddDays(i |&gt; float))\n    }\n\nmonad is from F#+, though implementing option Computation Expression manually is pretty straight-forward\n...converging into the same topic, never reaching it\nThese C# constructs do exactly the same thing, without any major or unsafe hacks. The main barrier from using these in a monad-like manner is their naming. Despite being perfectly viable in multiple scenarios their naming suggests using them in LINQ-to-* and asynchronous code respectively.\n\nin C# there's no way to create a generic Monad&lt;T&lt;E&gt;&gt; because there's no higher-kinded polymorphism\npoor type inference, no partial inference, partly due to complicated inheritance laws\nquery expression has no ability to switch from one monad type to another using concise language syntax, while functional languages have transformers and one can nest computational expressions.\n\n","id":"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/","title":"C# expressions that try to be monadic"},"https://autoforecastteam.github.io/posts/monad-intro/":{"body":"\nIntro to monads in F#\nA purpose of this post is to give you an intuition of monads and to show their implementation in\nF#+ library.\nWhat is monad?\nIt's a concept from a branch of mathematics called Category Theory.\nFor the purpose of this introduction we can think of it as an abstract, generic type\nthat implements a specific interface.\nOn the level of intuition, we can think of monads as \"boxes\" for values. However,\nin some cases this intuition may be a bit of a stretch.\nWhy should I bother?\nActually, you don't have to. You can easily write F# code without these kinds of mathematical concepts.\nHowever, using monads can make you see high-level patterns that span across different data types and domains.\nIt will also make your code shorter and more declarative.\nI think it's a worthy pursuit for anyone interested in functional programming.\nMonad \"interface\"\nAll monads should obey monad laws. We can think of them loosely as an interface. \nI will try to show the vanilla F# way of handling monads, and compare it to the F#+ way.\nI would like to show that monads let us treat different types in a similar way.\nWe can use same approach to create and combine values in different monadic contexts.\nUnit/Return\nType signature: a -&gt; M a where M is a monad type.\nA function that \"wraps\" a value into a monad. \nWe can create a monad in F#+ using result function.\nExamples of popular monads creation in F# using both FSharp.Core API and F#+ result.\nlet l   = [1]\nlet l'  = List.singleton 1\nlet l'' = result 1 : int list \n\nlet s   = seq [1]\nlet s'  = Seq.singleton 1\nlet s'' = result 1 : int seq \n\nlet ar   = [|1|]\nlet ar'  = Array.singleton 1\nlet ar'' = result 1 : int []\n\nlet a   = async { return 1 }\nlet a'  = async.Return 1\nlet a'' = result 1 : Async&lt;int&gt;\n\nlet o   = Some 1\nlet o'  = None\nlet o'' = result 1 : int option\n\nlet r   = Ok 1\nlet r'  = Error \"Oops!\"\nlet r'' = result 1 : Result&lt;int,string&gt;\n\nWe have to add type annotation when assigning result to a variable.\nThe reason is these variables are not used, so the compiler can't infer their types.\nIn this case, we have to add types manually.\nJoin\nType signature: M M a -&gt; M a where M is a monad type.\nJoin lets us flatten nested monads.\nlet nestedList = [[1]]\nlet jl  = nestedList |&gt; List.concat\nlet jl' = nestedList |&gt; join\n\nlet nestedSeq = seq [seq [1]]\nlet sl  = nestedSeq |&gt; Seq.concat\nlet sl' = nestedSeq |&gt; join\n\nlet nestedArray = [|[|1|]|]\nlet jar  = nestedArray |&gt; Array.concat\nlet jar' = nestedArray |&gt; join\n\nlet nestedAsync = 1 |&gt; async.Return |&gt; async.Return\nlet ja  = nestedAsync |&gt; fun x -&gt; async.Bind (x,id)\nlet ja' = nestedAsync |&gt; join\n\nlet nestedOption = Some (Some 1)\nlet jo  = nestedOption |&gt; Option.flatten\nlet jo' = nestedOption |&gt; join\n\nlet nestedResult = Ok (Ok 1)\nlet jr : Result&lt;int,int&gt; = \n    nestedResult\n    |&gt; function \n        | Ok (Ok v) -&gt; Ok v \n        | Ok (Error e) \n        | Error e -&gt; Error e  \n          \nlet jr' : Result&lt;int,int&gt; = nestedResult |&gt; join\n\nWe can see, that F#+ becomes really handy. Especially, when dealing with Option andResult type.\nThese types are often handled using Computation Expressions.\nDealing with them using plain F# core functions is pretty awkward.\nMap\nType signature: (a -&gt; b) -&gt; M a -&gt; M b where M is a monad type\nMonads are also functors, so we can map over them.\nLet's define a simple function\nlet myFunction x = x + 1 \n\nand see how we can apply it to our example types.\nlet ml   = [1] |&gt; List.map myFunction\nlet ml'  = [1] |&gt; map myFunction\nlet ml'' = [1] |&gt;&gt; myFunction\n\nlet ms   = seq [1] |&gt; Seq.map myFunction\nlet ms'  = seq [1] |&gt; map myFunction\nlet ms'' = seq [1] |&gt;&gt; myFunction\n\nlet mar   = [|1|] |&gt; Array.map myFunction\nlet mar'  = [|1|] |&gt; map myFunction\nlet mar'' = [|1|] |&gt;&gt; myFunction\n\nlet ma   = async { return 1 } |&gt; Async.map myFunction\nlet ma'  = async { return 1 } |&gt; map myFunction\nlet ma'' = async { return 1 } |&gt;&gt; myFunction\n\nlet mo   = Some 1 |&gt; Option.map myFunction\nlet mo'  = Some 1 |&gt; map myFunction\nlet mo'' = Some 1 |&gt;&gt; myFunction\n\nlet mr  : Result&lt;int,int&gt; = Ok 1 |&gt; Result.map myFunction\nlet mr' : Result&lt;int,int&gt; = Ok 1 |&gt; map myFunction\nlet mr'': Result&lt;int,int&gt; = Ok 1 |&gt;&gt; myFunction\n\nWe map in F#+ using either generic map function, or simply with an operator |&gt;&gt;.\nBind\nType signature: (a -&gt; M b) -&gt; M a -&gt; M b where M is a monad type\nBind lets us apply monadic value to a function returning monad.\nWe create a monadic version of myFunction for each context by composing it with previously described result function.\nlet blf  = myFunction &gt;&gt; result\nlet bl   = [1] |&gt; List.collect blf \nlet bl'  = [1] |&gt; bind blf \nlet bl'' = [1] &gt;&gt;= blf \n\nlet barf  = myFunction &gt;&gt; result \nlet bar   = [|1|] |&gt; Array.collect barf\nlet bar'  = [|1|] |&gt; bind barf\nlet bar'' = [|1|] &gt;&gt;= barf\n\nlet bsf  = myFunction &gt;&gt; result \nlet bs   = [|1|] |&gt; Seq.collect bsf\nlet bs'  = [|1|] |&gt; bind bsf\nlet bs'' = [|1|] &gt;&gt;= bsf\n\nlet baf  = myFunction &gt;&gt; result \nlet ba   = async { return 1 } |&gt; fun x -&gt; async.Bind (x, baf)\nlet ba'  = async { return 1 } |&gt; bind baf\nlet ba'' = async { return 1 } &gt;&gt;= baf\n\nlet bof  = myFunction &gt;&gt; result \nlet bo   = Some 1 |&gt; Option.bind bof\nlet bo'  = Some 1 |&gt; bind bof\nlet bo'' = Some 1 &gt;&gt;= bof\n\nlet brf = myFunction &gt;&gt; result \nlet br   : Result&lt;int,int&gt; = Ok 1 |&gt; Result.bind brf\nlet br'  : Result&lt;int,int&gt; = Ok 1 |&gt; bind brf\nlet br'' : Result&lt;int,int&gt; = Ok 1 &gt;&gt;= brf\n\nSimiliarly to map, we use bind in F#+ using either generic bind function, or with an operator &gt;&gt;=.\nBind composition\nFunction bind can be defined in terms of map and join.\nWe can define our own function\nlet myBind f = map f &gt;&gt; join \n\nand then use it similarly to previously shown bind\nlet myFun x = [x + 1] \nlet bc   = [1] &gt;&gt;= myFun \nlet bc' = [1] |&gt; myBind myFun\n\nExample code\n#r \"nuget: FSharpPlus\"\nopen FSharpPlus\n\n// Unit/Return\nlet l   = [1]\nlet l'  = List.singleton 1\nlet l'' = result 1 : int list \n\nlet s   = seq [1]\nlet s'  = Seq.singleton 1\nlet s'' = result 1 : int seq \n\nlet ar   = [|1|]\nlet ar'  = Array.singleton 1\nlet ar'' = result 1 : int []\n\nlet a   = async { return 1 }\nlet a'  = async.Return 1\nlet a'' = result 1 : Async&lt;int&gt;\n\nlet o   = Some 1\nlet o'  = None\nlet o'' = result 1 : int option\n\nlet r   = Ok 1\nlet r'  = Error \"Oops!\"\nlet r'' = result 1 : Result&lt;int,string&gt;\n\n//  Join\nlet nestedList = [[1]]\nlet jl  = nestedList |&gt; List.concat\nlet jl' = nestedList |&gt; join\n\nlet nestedSeq = seq [seq [1]]\nlet sl  = nestedSeq |&gt; Seq.concat\nlet sl' = nestedSeq |&gt; join\n\nlet nestedArray = [|[|1|]|]\nlet jar  = nestedArray |&gt; Array.concat\nlet jar' = nestedArray |&gt; join\n\nlet nestedAsync = 1 |&gt; async.Return |&gt; async.Return\nlet ja  = nestedAsync |&gt; fun x -&gt; async.Bind (x,id)\nlet ja' = nestedAsync |&gt; join\n\nlet nestedOption = Some (Some 1)\nlet jo  = nestedOption |&gt; Option.flatten\nlet jo' = nestedOption |&gt; join\n\nlet nestedResult = Ok (Ok 1)\nlet jr : Result&lt;int,int&gt; = \n    nestedResult\n    |&gt; function \n        | Ok (Ok v) -&gt; Ok v \n        | Ok (Error e) \n        | Error e -&gt; Error e  \n          \nlet jr' : Result&lt;int,int&gt; = nestedResult |&gt; join \n\n// Map\nlet myFunction x = x + 1 \n\nlet ml   = [1] |&gt; List.map myFunction\nlet ml'  = [1] |&gt; map myFunction\nlet ml'' = [1] |&gt;&gt; myFunction\n\nlet ms   = seq [1] |&gt; Seq.map myFunction\nlet ms'  = seq [1] |&gt; map myFunction\nlet ms'' = seq [1] |&gt;&gt; myFunction\n\nlet mar   = [|1|] |&gt; Array.map myFunction\nlet mar'  = [|1|] |&gt; map myFunction\nlet mar'' = [|1|] |&gt;&gt; myFunction\n\nlet ma   = async { return 1 } |&gt; Async.map myFunction\nlet ma'  = async { return 1 } |&gt; map myFunction\nlet ma'' = async { return 1 } |&gt;&gt; myFunction\n\nlet mo   = Some 1 |&gt; Option.map myFunction\nlet mo'  = Some 1 |&gt; map myFunction\nlet mo'' = Some 1 |&gt;&gt; myFunction\n\nlet mr  : Result&lt;int,int&gt; = Ok 1 |&gt; Result.map myFunction\nlet mr' : Result&lt;int,int&gt; = Ok 1 |&gt; map myFunction\nlet mr'': Result&lt;int,int&gt; = Ok 1 |&gt;&gt; myFunction\n\n// Bind\nlet blf = myFunction &gt;&gt; result\nlet bl   = [1] |&gt; List.collect blf \nlet bl'  = [1] |&gt; bind blf \nlet bl'' = [1] &gt;&gt;= blf \n\nlet barf  = myFunction &gt;&gt; result \nlet bar   = [|1|] |&gt; Array.collect barf\nlet bar'  = [|1|] |&gt; bind barf\nlet bar'' = [|1|] &gt;&gt;= barf\n\nlet bsf  = myFunction &gt;&gt; result \nlet bs   = [|1|] |&gt; Seq.collect bsf\nlet bs'  = [|1|] |&gt; bind bsf\nlet bs'' = [|1|] &gt;&gt;= bsf\n\nlet baf  = myFunction &gt;&gt; result \nlet ba   = async { return 1 } |&gt; fun x -&gt; async.Bind (x, baf)\nlet ba'  = async { return 1 } |&gt; bind baf\nlet ba'' = async { return 1 } &gt;&gt;= baf\n\nlet bof  = myFunction &gt;&gt; result \nlet bo   = Some 1 |&gt; Option.bind bof\nlet bo'  = Some 1 |&gt; bind bof\nlet bo'' = Some 1 &gt;&gt;= bof\n\nlet brf = myFunction &gt;&gt; result \nlet br   : Result&lt;int,int&gt; = Ok 1 |&gt; Result.bind brf\nlet br'  : Result&lt;int,int&gt; = Ok 1 |&gt; bind brf\nlet br'' : Result&lt;int,int&gt; = Ok 1 &gt;&gt;= brf\n\n// Bind composition\nlet myBind f = map f &gt;&gt; join \n\nlet myFun x = [x + 1] \nlet bc   = [1] &gt;&gt;= myFun \nlet bc' = [1] |&gt; myBind myFun\n\n","id":"https://autoforecastteam.github.io/posts/monad-intro/","title":"Intro to monads in F#"},"https://autoforecastteam.github.io/posts/monad-transformers/":{"body":"\nMonad transformers\nIn previous posts we've looked into different Monad types. Today, we will\nshow methods for working with combinations of monads.\nGeneral pattern\nLet's say we have a monadic type Option&lt;T&gt; that is nested in Async&lt;T&gt;.\nThe resulting type is Async&lt;Option&lt;T&gt;&gt;.\nWe would like to be able to do some calculation on wrapped value.\nNow we have to:\n\nAdd FSharpPlus to our project.\nOpen FSharpPlus and FSharpPlus.Data namespaces.\nWrap our value with monad transformer of nested monad - OptionT&lt;T&gt; in our case.\nCreateF#+ monad expression with our calculation logic.\nMaterialize result with transformer run function - OptionT.run in our case.\n\nConcrete example - Asynchronous Option\nNow, let's create an implementation of the pattern shown above.\nlet v1 : Async&lt;Option&lt;int&gt;&gt; = async { return Some 1 }\nlet v2 : Async&lt;Option&lt;int&gt;&gt; = async { return Some 2 }\n\nlet vResult = \n    monad {\n        let! x1 = OptionT v1\n        let! x2 = OptionT v2\n        return x1 + x2\n    } |&gt; OptionT.run\n      |&gt; Async.RunSynchronously\n\nIn a simple case like above we can just use F#+ lift/map functions:\nlet vResult' = lift2 (+) (OptionT v1) (OptionT v2)\n               |&gt; OptionT.run\n               |&gt; Async.RunSynchronously\n\nlet vResult'' = OptionT.map2 (+) (OptionT v1) (OptionT v2)\n                |&gt; OptionT.run\n                |&gt; Async.RunSynchronously\n\nWorking with values of different types\nWhen dealing with transformers, we need all values to have the same type,\nso that we can wrap them in OptionT transformer.\nLet's say we have these values:\nlet ao1 = async { return Some 1 } // Async&lt;Option&lt;int&gt;&gt;\nlet ao2 = async { return Some 2 } // Async&lt;Option&lt;int&gt;&gt;\nlet ao3 = Some 3                  // Option&lt;int&gt;, but not Async\nlet ao4 = async { return 4 }      // Async&lt;int&gt;, but not Option\n\nTo make them all the same type, we will have to:\n\nwrap value ao3 in Async using async.Return\nlift ao4 to OptionT context using OptionT.lift function\nThen we will be able to make calculation using monad expression, as in a previous example.\n\nlet aoResult = \n    monad {\n        let! x1 = OptionT ao1\n        let! x2 = OptionT ao2\n        let! x3 = OptionT &lt;| async.Return ao3\n        let! x4 = OptionT.lift ao4\n        return x1 + x2 + x3 + x4  // Or use `List.reduce (+) [x1;x2;x3;x4]`\n    } |&gt; OptionT.run\n      |&gt; Async.RunSynchronously\n\nAnother example - ResultT\nSimilar to Async Option:\ntype AsyncResult = Async&lt;Result&lt;int, string&gt;&gt;\nlet ar1: AsyncResult = async { return Ok 1 }\nlet ar2: AsyncResult = async { return Ok 2 }\n\nlet ar = \n    monad {\n        let! r1 = ResultT ar1\n        let! r2 = ResultT ar2\n        return r1 + r2 \n    } |&gt; ResultT.run\n      |&gt; Async.RunSynchronously\n\nlet ar'  = lift2 (+) (ResultT ar1) (ResultT ar2)\n          |&gt; ResultT.run\n          |&gt; Async.RunSynchronously\n\nlet ar'' = ResultT.map2 (+) (ResultT ar1) (ResultT ar2)\n          |&gt; ResultT.run\n          |&gt; Async.RunSynchronously\n\nAsync Result with effects and value passing\nNow let's see a more interesting case of Result.\nLet's define couple of functions:\nlet r1 () = async { \n    printfn \"r1 = %d\" 1\n    return Ok 1 }\n\nlet r2 x = async {\n    let r2Val = x + 1\n    printfn \"r2 = %d\" r2Val\n    return Ok r2Val }\n\nlet r3 x = async {\n    let r3Val = x + 1\n    printfn \"r3 = %d\" r3Val\n    return Error \"Problem in r3\" } \n\nlet r4 () = async {\n    printfn \"r4 is run\"\n    return Ok () }\n\nWe wrap them in ResultT, so that we can bind returned values to variables,\nor just execute effectful actions:\nlet aer = \n    monad {\n        let! v1 = ResultT &lt;| (r1 ())\n        let! v2 = ResultT &lt;| (r2 v1)\n        do!       ResultT &lt;| r3 v2 \n        do!       ResultT &lt;| r4 ()\n    } |&gt; ResultT.run \n      |&gt; Async.RunSynchronously\n\nMultiple monadic layers\nLet's say we have three layers of monads:\ntype T1 = Async&lt;Option&lt;Result&lt;int, string&gt;&gt;&gt; \n\nlet v1' = async { return Some (Ok 1) } : T1\nlet v2' = async { return Some (Ok 2) } : T1\n\nWe can simplify dealing with nested transformers using function composition:\nlet combinedT = OptionT &gt;&gt; ResultT\nlet runCombined : ResultT&lt;OptionT&lt;T1&gt;&gt; -&gt; T1 = \n    ResultT.run &gt;&gt; OptionT.run \n\nNow we can execute in a straightforward way:\nlet result = \n    monad {\n        let! x1 = combinedT v1'\n        let! x2 = combinedT v2'\n        return x1 + x2 \n    } |&gt; runCombined\n      |&gt; Async.RunSynchronously\n\nCode\n#r \"nuget: FSharpPlus\"\nopen FSharpPlus\nopen FSharpPlus.Data\n\n\n// Async Option\nlet v1 : Async&lt;Option&lt;int&gt;&gt; = async { return Some 1 }\nlet v2 : Async&lt;Option&lt;int&gt;&gt; = async { return Some 2 }\n\nlet vResult = \n    monad {\n        let! x1 = OptionT v1\n        let! x2 = OptionT v2\n        return x1 + x2\n    } |&gt; OptionT.run\n      |&gt; Async.RunSynchronously\n\nlet vResult' = lift2 (+) (OptionT v1) (OptionT v2)\n               |&gt; OptionT.run\n               |&gt; Async.RunSynchronously\nlet vResult'' = OptionT.map2 (+) (OptionT v1) (OptionT v2)\n                |&gt; OptionT.run\n                |&gt; Async.RunSynchronously\n\n\n// Working with values of different types\nlet ao1 = async { return Some 1 }\nlet ao2 = async { return Some 2 }\nlet ao3 = Some 3\nlet ao4 = async { return 4 }\n\nlet aoResult = \n    monad {\n        let! x1 = OptionT ao1\n        let! x2 = OptionT ao2\n        let! x3 = OptionT &lt;| async.Return ao3\n        let! x4 = OptionT.lift ao4\n        return x1 + x2 + x3 + x4  // Or use `List.reduce (+) [x1;x2;x3;x4]`\n    } |&gt; OptionT.run\n      |&gt; Async.RunSynchronously\n\n\n// Async Result \ntype AsyncResult = Async&lt;Result&lt;int, string&gt;&gt;\nlet ar1: AsyncResult = async { return Ok 1 }\nlet ar2: AsyncResult = async { return Ok 2 }\n\nlet ar = \n    monad {\n        let! r1 = ResultT ar1\n        let! r2 = ResultT ar2\n        return r1 + r2 \n    } |&gt; ResultT.run\n      |&gt; Async.RunSynchronously\n\nlet ar'  = lift2 (+) (ResultT ar1) (ResultT ar2)\n          |&gt; ResultT.run\n          |&gt; Async.RunSynchronously\n\nlet ar'' = ResultT.map2 (+) (ResultT ar1) (ResultT ar2)\n          |&gt; ResultT.run\n          |&gt; Async.RunSynchronously\n\n\n// Async Result with effects and value passing\nlet r1 () = async { \n    printfn \"r1 = %d\" 1\n    return Ok 1 }\n\nlet r2 x = async {\n    let r2Val = x + 1\n    printfn \"r2 = %d\" r2Val\n    return Ok r2Val }\n\nlet r3 x = async {\n    let r3Val = x + 1\n    printfn \"r3 = %d\" r3Val\n    return Error \"Problems in r3\" } \n\nlet r4 () = async {\n    printfn \"r4 is run\"\n    return Ok () }\n\nlet aer = \n    monad {\n        let! v1 = ResultT &lt;| (r1 ())\n        let! v2 = ResultT &lt;| (r2 v1)\n        do!       ResultT &lt;| r3 v2 \n        do!       ResultT &lt;| r4 ()\n    } |&gt; ResultT.run \n      |&gt; Async.RunSynchronously\n\n\n// Multiple monadic layers\ntype T1 = Async&lt;Option&lt;Result&lt;int, string&gt;&gt;&gt; \n\nlet v1' = async { return Some (Ok 1) } : T1\nlet v2' = async { return Some (Ok 2) } : T1\n\nlet combinedT = OptionT &gt;&gt; ResultT\nlet runCombined : ResultT&lt;OptionT&lt;T1&gt;&gt; -&gt; T1 = \n    ResultT.run &gt;&gt; OptionT.run \n\nlet result = \n    monad {\n        let! x1 = combinedT v1'\n        let! x2 = combinedT v2'\n        return x1 + x2 \n    } |&gt; runCombined\n      |&gt; Async.RunSynchronously\n\n\n","id":"https://autoforecastteam.github.io/posts/monad-transformers/","title":"Monad transformers"},"https://autoforecastteam.github.io/posts/parsing-101/":{"body":"\nParsing 101\nIn this post I will try to show a simple example of parsing using FParsec library.\nIt uses a Combinatory Parsing approach, which is pervasive across Functional Programming domain.\nTask #1 - Parse simple boolean logic\nLet's define a type that represents a boolean expressions.\nIt is a recursive type for which we can distnguish two kinds of expressions:\n\nPrimitive - True, False\nNested - And, Or, Not\n\ntype BoolExpr =\n    | True\n    | False\n    | And of BoolExpr * BoolExpr\n    | Or of BoolExpr * BoolExpr\n    | Not of BoolExpr\n\nFirst, we define primitive parsers.\nlet pTrue : Parser&lt;BoolExpr,unit&gt; = \n    pstring \"TRUE\" |&gt;&gt; (fun _ -&gt; True) // See how `|&gt;&gt;` is used to map Parser monad to type. \n                                       // It's the same convention as in FSharpPlus\nlet pFalse : Parser&lt;BoolExpr,unit&gt; = \n    pstring \"FALSE\" &gt;&gt;% False // But for map with value dropping, we can just use dedicated operator `&gt;&gt;%`\n\nFunctional approach: Use composition to build robust abstractions.\nWe combine two primitive parsers to create a single parser for primitives.\nlet pBoolLiteral : Parser&lt;BoolExpr,unit&gt; = pTrue &lt;|&gt; pFalse\n\nNow, let's create a simple runner:\nlet parse parser str =\n    match run parser str with\n    | Success(result, _, _)   -&gt; result\n    | Failure(errorMsg, _, _) -&gt; failwith errorMsg\n\nWe can see if our parsers work correct:\n// Parse concrete primitives\nlet trueVal = parse pTrue \"TRUE\"\nlet falseVal = parse pFalse \"FALSE\"\nlet trueFail = parse pTrue \"NOT_A_TRUE\"\nlet falseFail = parse pFalse \"NOT_A_FALSE\" \n\n// Parse primitive expressions\nlet trueVal' = parse pBoolLiteral \"TRUE\"\nlet falseVal' = parse pBoolLiteral \"FALSE\"\nlet trueFail' = parse pBoolLiteral \"NOT_A_TRUE\"\nlet falseFail' = parse pBoolLiteral \"NOT_A_FALSE\" \n\nFor our implementation to work correctly, we need to be able to parse nested expressions.\nCommon way to structurize expressions is to use parentheses, which our parser needs to support.\nExample: (NOT TRUE) AND (TRUE OR FALSE) is And expression, which is combined of two expressions: NOT TRUE and TRUE OR FALSE \nWe declare dummy parser, that will be filled with proper implementation in future.\nWarning: Using this parser without binding proper implementation to it, will result in runtime Exception.\nlet exprParser, exprParserRef = createParserForwardedToRef&lt;BoolExpr,unit&gt;()\n\nWe use it in our implementation of parenthesized expression parser:\nlet pParenExpr = between (pchar '(') (pchar ')') exprParser\n\nNow, we can create a term parser. \nOne thing to consider is potential spaces in our input (e.g. NOT  (  TRUE )).\nWe need to parse them, but they are not meaningful, so we drop them using operators &gt;&gt;. and .&gt;&gt;.\nlet pTerm = \n    spaces &gt;&gt;. \n    pBoolLiteral &lt;|&gt; pParenExpr\n    .&gt;&gt; spaces\n\nNow we want to parse operators.\nWe could write our own implementation, but it's simpler and more efficient to use a dedicated tool:\nlet opp = OperatorPrecedenceParser&lt;_,_,_&gt;()\n\nLet's define some helpers.\nlet isSymbolicOperatorChar = notFollowedBy letter &gt;&gt;. spaces\nlet resultFun op = fun x y -&gt; op (x, y)\n\nNow we can add infix operators OR and AND. \nAND has a greater precedence, so we give it 20.\nThere is a convention of assigning (10, 20, 30) instead of (1, 2, 3) as precedence values.\nThe reason is, that it's easier to add some operators inbetween existing ones later.\nlet infixOperator (opp: OperatorPrecedenceParser&lt;_,_,_&gt;) op prec assoc f =\n    opp.AddOperator(InfixOperator (op, isSymbolicOperatorChar, prec, assoc, resultFun f))\ninfixOperator opp \"OR\" 10 Associativity.Left Or\ninfixOperator opp \"AND\" 20 Associativity.Left And\n\nNow we add prefix operator NOT. It has greater precedence than infixes, so it gets 30. \nopp.AddOperator(PrefixOperator (\"NOT\", isSymbolicOperatorChar, 30, true, Not))\n\nWe assign our term parser.\nopp.TermParser &lt;- pTerm\n\nAnd we assign our infix parser as our proper parser implementation instead of previously defined dummy.\nexprParserRef := opp.ExpressionParser\n\nLet's see if it works.\nlet pExpr = parse exprParser\npExpr \"FALSE AND TRUE\"\npExpr \"NOT FALSE OR NOT TRUE\"\npExpr \"NOT ( FALSE AND NOT TRUE )\"\n\nTask #2 - Evaluate parsed expressions\nNow that we made all the parsing, evaluation is straightforward:\nlet rec eval = \n    function\n    | True -&gt; true\n    | False -&gt; false \n    | And (e1, e2) -&gt; (eval e1) &amp;&amp; (eval e2) \n    | Or (e1, e2) -&gt; (eval e1) || (eval e2)\n    | Not e -&gt; not (eval e)\n\nFinally, let's parse and evaluate our expressions. \nlet parseAndEval = pExpr &gt;&gt; eval\nparseAndEval \" FALSE   AND    TRUE   \"\nparseAndEval \"NOT FALSE OR NOT TRUE\"\nparseAndEval \"NOT ( FALSE AND NOT TRUE )\"\nparseAndEval \"NOT TRUE AND NOT FALSE OR TRUE AND NOT FALSE\"\n\nResources\n\nSuper useful tutorial with explained FParsec internals by Scott Wlaschin.\nhttps://fsharpforfunandprofit.com/posts/understanding-parser-combinators/\nFParsec docs. Tutorial and user's guide are especially valuable for beginners.\nhttps://www.quanttec.com/fparsec/tutorial.html\nComparison of different parsing approaches.\nhttps://www.quanttec.com/fparsec/about/fparsec-vs-alternatives.html\n\nCode\n#r \"nuget: FParsec\"\n\nopen FParsec\n\n// Task #1 - Parse simple boolean logic\n\ntype BoolExpr =\n    | True   \n    | False\n    | And of BoolExpr * BoolExpr\n    | Or of BoolExpr * BoolExpr\n    | Not of BoolExpr\n\nlet pTrue : Parser&lt;BoolExpr,unit&gt; = \n    pstring \"TRUE\" |&gt;&gt; (fun _ -&gt; True) \nlet pFalse : Parser&lt;BoolExpr,unit&gt; = \n    pstring \"FALSE\" &gt;&gt;% False\n\nlet pBoolLiteral : Parser&lt;BoolExpr,unit&gt; = pTrue &lt;|&gt; pFalse\n\nlet parse parser str =  \n    match run parser str with\n    | Success(result, _, _)   -&gt; result\n    | Failure(errorMsg, _, _) -&gt; failwith errorMsg\n\nlet trueVal = parse pTrue \"TRUE\"\nlet falseVal = parse pFalse \"FALSE\"\n// let trueFail = parse pTrue \"NOT_A_TRUE\"\n// let falseFail = parse pFalse \"NOT_A_FALSE\" \n\nlet trueVal' = parse pBoolLiteral \"TRUE\"\nlet falseVal' = parse pBoolLiteral \"FALSE\"\n// let trueFail' = parse pBoolLiteral \"NOT_A_TRUE\"\n// let falseFail' = parse pBoolLiteral \"NOT_A_FALSE\" \n\nlet exprParser, exprParserRef = createParserForwardedToRef&lt;BoolExpr,unit&gt;()\n\nlet pParenExpr = between (pchar '(') (pchar ')') exprParser\n\nlet pTerm = \n    spaces &gt;&gt;. \n    pBoolLiteral &lt;|&gt; pParenExpr\n    .&gt;&gt; spaces\n\nlet opp = OperatorPrecedenceParser&lt;_,_,_&gt;()\n\nlet isSymbolicOperatorChar = notFollowedBy letter &gt;&gt;. spaces\nlet resultFun op = fun x y -&gt; op (x, y)\n\nlet infixOperator (opp: OperatorPrecedenceParser&lt;_,_,_&gt;) op prec assoc f =\n    opp.AddOperator(InfixOperator (op, isSymbolicOperatorChar, prec, assoc, resultFun f))\ninfixOperator opp \"OR\" 10 Associativity.Left Or\ninfixOperator opp \"AND\" 20 Associativity.Left And\n\nopp.AddOperator(PrefixOperator (\"NOT\", isSymbolicOperatorChar, 30, true, Not))\n\nopp.TermParser &lt;- pTerm\n\nexprParserRef := opp.ExpressionParser\n\nlet pExpr = parse exprParser\npExpr \"FALSE AND TRUE\"\npExpr \"NOT FALSE OR NOT TRUE\"\npExpr \"NOT ( FALSE AND NOT TRUE )\"\n\n\n// Task #2 - Evaluate parsed expressions\n\nlet rec eval = \n    function\n    | True -&gt; true\n    | False -&gt; false \n    | And (e1, e2) -&gt; (eval e1) &amp;&amp; (eval e2) \n    | Or (e1, e2) -&gt; (eval e1) || (eval e2)\n    | Not e -&gt; not (eval e)\n\nlet parseAndEval = pExpr &gt;&gt; eval\nparseAndEval \" FALSE   AND    TRUE   \"\nparseAndEval \"NOT FALSE OR NOT TRUE\"\nparseAndEval \"NOT ( FALSE AND NOT TRUE )\"\nparseAndEval \"NOT TRUE AND NOT FALSE OR TRUE AND NOT FALSE\"\n\n","id":"https://autoforecastteam.github.io/posts/parsing-101/","title":"Parsing 101"}},"docInfo":{"https://autoforecastteam.github.io/":{"body":0,"title":4},"https://autoforecastteam.github.io/authors/":{"body":2,"title":1},"https://autoforecastteam.github.io/authors/pawel-sierzputowski/":{"body":1,"title":2},"https://autoforecastteam.github.io/authors/rafal-gwozdzinski/":{"body":1,"title":2},"https://autoforecastteam.github.io/authors/robert-marciniak/":{"body":1,"title":2},"https://autoforecastteam.github.io/posts/":{"body":0,"title":1},"https://autoforecastteam.github.io/posts/deconstruction/":{"body":1082,"title":4},"https://autoforecastteam.github.io/posts/dotnet-api-changes/":{"body":176,"title":3},"https://autoforecastteam.github.io/posts/fsharp-errors/":{"body":377,"title":3},"https://autoforecastteam.github.io/posts/monad-computation-expressions/":{"body":829,"title":3},"https://autoforecastteam.github.io/posts/monad-expressions-in-csharp/":{"body":358,"title":4},"https://autoforecastteam.github.io/posts/monad-intro/":{"body":1082,"title":3},"https://autoforecastteam.github.io/posts/monad-transformers/":{"body":682,"title":2},"https://autoforecastteam.github.io/posts/parsing-101/":{"body":691,"title":2}},"length":14},"lang":"English"};